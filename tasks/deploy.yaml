---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy
spec:
  params:
    - name: BONFIRE_IMAGE
      type: string
      description: The container Bonfire image to use for the tekton tasks
      default: quay.io/redhat-services-prod/hcm-eng-prod-tenant/cicd-tools:cfa8bfe
    - name: HOMEDIR
      type: string
      description: Value for the HOME environment variable.
      default: /tekton/home
    - name: SNAPSHOT
      type: string
      description: "AppStudio snapshot (see example above)"
    - name: SINGLE_COMPONENT
      description: Reduce the Snapshot to only the component whose build caused the Snapshot to be created
      type: string
      default: "false"
    - name: SINGLE_COMPONENT_CUSTOM_RESOURCE
      description: >
        Name, including kind, of the Kubernetes resource to query for labels when single
        component mode is enabled, e.g. pr/somepipeline.
      type: string
      default: "unknown"
    - name: APP_INTERFACE_SECRET
      type: string
      default: app-interface
      description: "Secret for connecting to app-interface"
    - name: EPHEMERAL_ENV_PROVIDER_SECRET
      type: string
      default: ephemeral-env-provider
      description: "Secret for connecting to ephemeral env provider cluster"
    - name: NS
      type: string
      description: Namespace name to deploy the application to
    - name: NS_REQUESTER
      type: string
      description: The name of the person/pipeline that requested the namespace
    - name: APP_NAME
      type: string
      description: name of app-sre "application" folder this component lives in
    - name: BONFIRE_COMPONENT_NAME
      type: string
      description: name of the app-sre component name
      default: ""
    - name: COMPONENTS
      type: string
      description: space-separated list of components to load
      default: ""
    - name: COMPONENTS_W_RESOURCES
      type: string
      description: component to keep
      default: ""
    - name: EXTRA_DEPLOY_ARGS
      type: string
      description: "Extra arguments for the deployment"
      default: ""
    - name: DEPLOY_FRONTENDS
      type: string
      description: "Deploy frontend in the env or not"
      default: ""
    - name: DEPLOY_TIMEOUT
      type: string
      description: "Deploy timeout"
      default: "900"
    - name: OPTIONAL_DEPS_METHOD
      type: string
      description: "Method to install optional dependencies - see bonfire docs"
      default: "hybrid"
  steps:
    # A hack to reduce the snapshot to a single component
    # Copied from https://github.com/enterprise-contract/ec-cli/blob/27a1c5725e864756c582e716c839ae53751aff0f/tasks/verify-conforma-konflux-ta/0.1/verify-conforma-konflux-ta.yaml#L205
    - name: reduce
      env:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: SINGLE_COMPONENT
          value: $(params.SINGLE_COMPONENT)
        - name: CUSTOM_RESOURCE
          value: $(params.SINGLE_COMPONENT_CUSTOM_RESOURCE)
        - name: CUSTOM_RESOURCE_NAMESPACE
          value: ""
        - name: SNAPSHOT_PATH
          value: /workspace/snapshot.json
        - name: HOME
          value: "$(params.HOMEDIR)"
      image: quay.io/enterprise-contract/ec-cli:snapshot
      onError: continue # progress even if the step fails so we can see the debug logs
      command: [reduce-snapshot.sh]
    - name: deploy-application
      image: "$(params.BONFIRE_IMAGE)"
      env:
        - name: APP_INTERFACE_USERNAME
          valueFrom:
            secretKeyRef:
              name: $(params.APP_INTERFACE_SECRET)
              key: username
        - name: APP_INTERFACE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(params.APP_INTERFACE_SECRET)
              key: password
        - name: APP_INTERFACE_BASE_URL
          valueFrom:
            secretKeyRef:
              name: $(params.APP_INTERFACE_SECRET)
              key: baseurl
        - name: OC_LOGIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: token
        - name: OC_LOGIN_SERVER
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: url
        - name: APP_NAME
          value: $(params.APP_NAME)
        - name: BONFIRE_COMPONENT_NAME
          value: $(params.BONFIRE_COMPONENT_NAME)
        - name: COMPONENTS
          value: $(params.COMPONENTS)
        - name: COMPONENTS_W_RESOURCES
          value: $(params.COMPONENTS_W_RESOURCES)
        # String interpolation is easier when injecting the SNAPSHOT to an env var.
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: SNAPSHOT_PATH
          value: /workspace/snapshot.json
        - name: BONFIRE_BOT
          value: "true"
        - name: EXTRA_DEPLOY_ARGS
          value: "$(params.EXTRA_DEPLOY_ARGS)"
        - name: DEPLOY_FRONTENDS
          value: "$(params.DEPLOY_FRONTENDS)"
        - name: DEPLOY_TIMEOUT
          value: "$(params.DEPLOY_TIMEOUT)"
      script: |
        #!/bin/bash
        set -ex

        echo "Connecting to the ephemeral namespace cluster"
        login.sh

        SNAPSHOT="$(cat "${SNAPSHOT_PATH}" 2> /dev/null || echo "${SNAPSHOT}")"

        echo "deploying to ephemeral"
        if [ -z "${EXTRA_DEPLOY_ARGS}" ]; then
          EXTRA_DEPLOY_ARGS="$(parse-snapshot.py)"
        else
          EXTRA_DEPLOY_ARGS+=" $(parse-snapshot.py) "
        fi
        export EXTRA_DEPLOY_ARGS
        deploy.sh "$(params.NS)" "$(params.NS_REQUESTER)" 
