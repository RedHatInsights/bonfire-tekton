---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy
spec:
  params:
    - name: BONFIRE_IMAGE
      type: string
      description: The container Bonfire image to use for the tekton tasks
      default: quay.io/redhat-user-workloads/hcc-devprod-tenant/hcc-cicd-tools/cicd-tools:eb1904eafc2d8af8a26b435de393d4776d9db2f6
    - name: SNAPSHOT
      type: string
      description: "AppStudio snapshot (see example above)"
    - name: APP_INTERFACE_SECRET
      type: string
      default: app-interface
      description: "Secret for connecting to app-interface"
    - name: EPHEMERAL_ENV_PROVIDER_SECRET
      type: string
      default: ephemeral-env-provider
      description: "Secret for connecting to ephemeral env provider cluster"
    - name: NS
      type: string
      description: Namespace name to deploy the application to
    - name: NS_REQUESTER
      type: string
      description: The name of the person/pipeline that requested the namespace
    - name: APP_NAME
      type: string
      description: name of app-sre "application" folder this component lives in
    - name: BONFIRE_COMPONENT_NAME
      type: string
      description: name of the app-sre component name
      default: ""
    - name: COMPONENTS
      type: string
      description: space-separated list of components to load
      default: ""
    - name: COMPONENTS_W_RESOURCES
      type: string
      description: component to keep
      default: ""
    - name: EXTRA_DEPLOY_ARGS
      type: string
      description: "Extra arguments for the deployment"
      default: ""
    - name: DEPLOY_FRONTENDS
      type: string
      description: "Deploy frontend in the env or not"
      default: ""
  steps:
    - name: deploy-application
      image: "$(params.BONFIRE_IMAGE)"
      env:
        - name: APP_INTERFACE_USERNAME
          valueFrom:
            secretKeyRef:
              name: $(params.APP_INTERFACE_SECRET)
              key: username
        - name: APP_INTERFACE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(params.APP_INTERFACE_SECRET)
              key: password
        - name: APP_INTERFACE_BASE_URL
          valueFrom:
            secretKeyRef:
              name: $(params.APP_INTERFACE_SECRET)
              key: baseurl
        - name: OC_LOGIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: token
        - name: OC_LOGIN_SERVER
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: url
        - name: APP_NAME
          value: $(params.APP_NAME)
        - name: BONFIRE_COMPONENT_NAME
          value: $(params.BONFIRE_COMPONENT_NAME)
        - name: COMPONENTS
          value: $(params.COMPONENTS)
        - name: COMPONENTS_W_RESOURCES
          value: $(params.COMPONENTS_W_RESOURCES)
        # String interpolation is easier when injecting the SNAPSHOT to an env var.
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: BONFIRE_BOT
          value: "true"
        - name: EXTRA_DEPLOY_ARGS
          value: "$(params.EXTRA_DEPLOY_ARGS)"
        - name: DEPLOY_FRONTENDS
          value: "$(params.DEPLOY_FRONTENDS)"
      script: |
        #!/bin/bash
        set -ex

        echo "Connecting to the ephemeral namespace cluster"
        login.sh

        echo "deploying to ephemeral"
        if [ -z "${EXTRA_DEPLOY_ARGS}" ]; then
          EXTRA_DEPLOY_ARGS="$(parse-snapshot.py)"
        else
          EXTRA_DEPLOY_ARGS+=" $(parse-snapshot.py) "
        fi
        export EXTRA_DEPLOY_ARGS
        deploy.sh "$(params.NS)" "$(params.NS_REQUESTER)" 
