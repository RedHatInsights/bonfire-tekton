apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: teardown
spec:
  params:
    - name: BONFIRE_IMAGE
      type: string
      description: The container Bonfire image to use for the tekton tasks
      default: quay.io/redhat-user-workloads/rhtap-migration-tenant/bonfire-cicd-tools/cicd-tools:06581a57e6209173defc2e00bd7af3d1d1fcc96a
    - name: NS
      type: string
      description: Namespace name to release
    - name: NS_REQUESTER
      type: string
      description: The name of the person/pipeline that requested the namespace
    - name: EPHEMERAL_ENV_PROVIDER_SECRET
      type: string
      default: ephemeral-env-provider
      description: "Secret for connecting to ephemeral env provider cluster"
    - name: AWS_SECRET
      type: string
      default: rh-artifacts-bucket
      description: Secret with connection details to S3
    - name: ARTIFACTS_KEY
      description: The name of the artifacts directory to upload to S3
  results:
    - name: ARTIFACTS_URL
  volumes:
    - name: artifacts
      emptyDir: {}
  steps:
    - name: collect-logs
      image: "$(params.BONFIRE_IMAGE)"
      env:
        - name: OC_LOGIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: token
        - name: OC_LOGIN_SERVER
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: url
        - name: BONFIRE_BOT
          value: "true"
      onError: continue
      volumeMounts:
        - name: artifacts
          mountPath: /artifacts
      script: |
        #!/bin/bash
        set -ex
        
        echo "Connecting to the ephemeral namespace cluster"
        login.sh

        echo "Collecting logs"
        collect-logs.sh "$(params.NS)" /artifacts || :
        minio-collect.sh "$(params.NS)" /artifacts
    - name: upload-artifacts-to-s3
      image: "$(params.BONFIRE_IMAGE)"
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: $(params.AWS_SECRET)
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.AWS_SECRET)
              key: aws_secret_access_key
        - name: AWS_DEFAULT_REGION
          value: us-east-1
        - name: BUCKET
          value: rh-artifacts-bucket
      onError: continue
      volumeMounts:
        - name: artifacts
          mountPath: /artifacts
      script: |
        #!/bin/bash
        set -ex
        
        echo "Copying files to S3"
        aws s3 cp --recursive /artifacts "s3://${BUCKET}/$(params.ARTIFACTS_KEY)"
        url="https://s3.console.aws.amazon.com/s3/buckets/${BUCKET}?region=${AWS_DEFAULT_REGION}&prefix=$(params.ARTIFACTS_KEY)/&showversions=false"
        echo -n ${url//'\n'}> "$(results.ARTIFACTS_URL.path)"

    - name: release-namespace
      image: "$(params.BONFIRE_IMAGE)"
      env:
        - name: OC_LOGIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: token
        - name: OC_LOGIN_SERVER
          valueFrom:
            secretKeyRef:
              name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
              key: url
        - name: BONFIRE_BOT
          value: "true"
      script: |
        #!/bin/bash
        set -ex
        
        echo "Connecting to the ephemeral namespace cluster"
        login.sh

        echo "Releasing ephemeral namespace"
        release-ns.sh "$(params.NS)" "$(params.NS_REQUESTER)"
